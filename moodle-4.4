#!/bin/sh
# Update system
sudo yum update -y

# Install Nginx and PHP 8.2
sudo amazon-linux-extras enable php8.2
sudo yum install nginx php8.2 php8.2-{fpm,mysqlnd,pear,cgi,common,curl,mbstring,gd,gettext,bcmath,json,xml,intl,zip,pgsql,xmlrpc,soap,sodium,opcache} -y

# Clean yum metadata
sudo yum clean metadata

# Install Git and MariaDB
sudo yum install git mariadb-server -y

# Backup existing nginx config
sudo cp -R /etc/nginx /etc/nginx-backup

# Set permissions for log and web root
sudo chmod -R 777 /var/log
sudo chown -R ec2-user:ec2-user /usr/share/nginx/html

# Add a PHP info page for testing
echo "<?php phpinfo(); ?>" > /usr/share/nginx/html/index.php

# Configure PHP-FPM
sudo sed -i 's|;*user = nginx|user = nginx|g' /etc/php-fpm.d/www.conf
sudo sed -i 's|;*group = nginx|group = nginx|g' /etc/php-fpm.d/www.conf
sudo sed -i 's|;*pm = ondemand|pm = ondemand|g' /etc/php-fpm.d/www.conf

# Update PHP settings
sudo sed -i 's|;cgi.fix_pathinfo=1|cgi.fix_pathinfo=0|g' /etc/php.ini
sudo sed -i 's|;*expose_php=.*|expose_php=0|g' /etc/php.ini
sudo sed -i 's|;*post_max_size = 8M|post_max_size = 50M|g' /etc/php.ini
sudo sed -i 's|;*upload_max_filesize = 2M|upload_max_filesize = 50M|g' /etc/php.ini
sudo sed -i 's|; max_input_vars = 1000|max_input_vars = 5000|g' /etc/php.ini

# Configure Nginx
cat << EOF > /etc/nginx/nginx.conf
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '\$remote_addr - \$remote_user [\$time_local] "\$request" '
                      '\$status \$body_bytes_sent "\$http_referer" '
                      '"\$http_user_agent" "\$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html/moodle;
        index index.php index.html index.htm;

        location / {
            try_files \$uri \$uri/ /index.php?\$query_string;
        }

        location ~ \.php$ {
            fastcgi_pass unix:/var/run/php-fpm/www.sock;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
            fastcgi_param PATH_INFO \$fastcgi_path_info;
        }

        location ~ /\.(?!well-known).* {
            deny all;
        }

        location /dataroot/ {
            internal;
            alias /usr/share/nginx/html/moodledata/;
        }
    }
}
EOF

# Enable and start services
for i in nginx php-fpm mariadb; do sudo systemctl enable $i --now; done
for i in nginx php-fpm mariadb; do sudo systemctl start $i; done

# Restart services
sudo systemctl restart nginx
sudo systemctl restart php-fpm

# Install Moodle
sudo git clone -b MOODLE_404_STABLE https://github.com/moodle/moodle.git /usr/share/nginx/html/moodle

# Configure Moodle
cat << EOF > /usr/share/nginx/html/moodle/config.php
<?php  // Moodle configuration file
unset(\$CFG);
global \$CFG;
\$CFG = new stdClass();
\$CFG->dbtype    = 'mariadb';
\$CFG->dblibrary = 'native';
\$CFG->dbhost    = 'DB_HOST';
\$CFG->dbname    = 'moodle_db';
\$CFG->dbuser    = 'moodle_user';
\$CFG->dbpass    = 'DB_PASS';
\$CFG->prefix    = 'mdl_';
\$CFG->dboptions = array (
  'dbpersist' => 0,
  'dbport' => 3306,
  'dbsocket' => '',
  'dbcollation' => 'utf8mb4_general_ci',
);
\$CFG->wwwroot   = 'http://WEB_HOST';
\$CFG->dataroot  = '/usr/share/nginx/html/moodledata';
\$CFG->admin     = 'admin';
\$CFG->directorypermissions = 0777;
require_once(__DIR__ . '/lib/setup.php');
// There is no php closing tag in this file,
// it is intentional because it prevents trailing whitespace problems!
EOF

# Set permissions
sudo chown -R nginx:nginx /usr/share/nginx/html/moodle
sudo chmod -R 777 /usr/share/nginx/html/moodle

# Create Moodle data folder
sudo mkdir /usr/share/nginx/html/moodledata
sudo chmod -R 777 /usr/share/nginx/html/moodledata

# Install Moodle
# sudo /bin/php /usr/share/nginx/html/moodle/admin/cli/install_database.php --lang=en --adminuser=admin --adminpass=Admin@1234 --adminemail=admin@yopmail.com --agree-license --fullname=TestLMS --shortname=LMS
